FIRSTLY WE CREATE A SERVER CLASS

Extend the class Jframe
import javax.swing.*;

--create main method
--now we create a server class object new Server(); anonymous object,
--now we create a constructor(constructor name are same as a class name),
--now we use a function setSize(450,700) for giving the window size and giving the size of the window,

after that our window is created but it is invisible so we use 
--setvisible(true); function for visible the window,
--now we can set the location of the window setLocation(200,50),

*getContentPane for taking the frame setBackground for color class Color.white import java awt class
--getContentPane().setBackground(Color.white);
  import java.awt.*;

We using set layout function from Swing 
-to set the image and the tet in the frame
setLayout(null); we are creating our own layout

now we create the header of the window
we use jpanel for creating on the frame
JPanel p1 =new JPanel();
set the background color of the area

we are using the add(component) function for set that on the panel
now we are using the setbound function to set the layout of the header on the frame
p1.setBounds(0,0, 450, 70);

--Now create a folder name with src/chatting and paste your image on this location which image you want to use in the header

for back image we use image icon class
-ImageIcon i1 = new ImageIcon(ClassLoader.getSystemResource("src/chatting/images.jpeg"));
using class to get the image

for setting the image we use jlable object and now passing the back image object in the jlable
--JLabel back = new JLabel(i1);
--back.setBounds(5,20,25,25);
for adding the image on the pannel using the p1
--p1.add(back);
firstly set bound layout need to be null for getting the values we are providing 
--p1.setLayout(null);

for setting the image we are using the image class it is available in the awt class
-Image i2 = i1.getImage().getScaledInstance(25,25, Image.SCALE_DEFAULT);

image in i1 and the scale image in i2 we can't pass the the i2 directly in jlable firstly we need to convert the image in to the icon
--ImageIcon i3=new ImageIcon(i2);
--JLabel back = new JLabel(i3);

Adding action on back arrow 
--impliment the ActionListener in the server class
import java.awt.event.ActionListener;

now we need to override the action listner class 
public void actionPerformed(ActionEvent ae){
        
    }

adding the action the back button click
it is a mouse click event
--back.addMouseListener(new MouseAdapter()

and calling the method mouse collect
public void mouseClicked(MouseEvent ae)
and taking the mouse event object

exit the project
System.exit(0)
